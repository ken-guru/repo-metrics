name: Publish repo metrics

on:
  push:
    branches: [ main ]

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Use the built-in GITHUB_TOKEN for auth now that the repository is public

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ./.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          set -euxo pipefail
          node --version
          npm --version
          npm ci --fetch-retries=5

      - name: Run tests
        run: |
          set -euxo pipefail
          npm test

      - name: Build
        run: |
          set -euxo pipefail
          npm run build

      - name: Generate metrics artifact
        run: |
          set -euxo pipefail
          mkdir -p artifacts
          echo "Running generator (node $(node --version), npm $(npm --version))"
          node dist/repo-metrics.js . --output-prefix artifacts/metrics --max-commits 2000 --verbose
          # normalize output into a metrics/ directory with index.html for convenient download
          mkdir -p artifacts/metrics
          if [ -f artifacts_metrics.html ]; then mv artifacts_metrics.html artifacts/metrics/index.html; fi
          if [ -f artifacts_metrics.csv ]; then mv artifacts_metrics.csv artifacts/metrics/metrics.csv; fi
          echo "Artifacts directory listing:"; ls -la artifacts || true
          echo "Artifacts/metrics listing:"; ls -la artifacts/metrics || true

      - name: Upload metrics artifact
        uses: actions/upload-artifact@v4
        with:
          name: repo-metrics-artifact
          path: artifacts/metrics

      - name: Create GitHub release for metrics (pushes only)
        if: github.event_name == 'push'
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: metrics-${{ github.run_id }}-${{ github.sha }}
          release_name: Metrics - ${{ github.sha }}
          body: 'Automated metrics artifact for commit `${{ github.sha }}`'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # the job-level GITHUB_TOKEN env will be used (GH_PAT if set, otherwise the workflow token)

      - name: Verify create-release produced upload_url
        if: github.event_name == 'push'
        run: |
          echo "create_release outputs: ${{ toJson(steps.create_release.outputs) }}"
          if [ -z "${{ steps.create_release.outputs.upload_url }}" ]; then
            echo 'create-release did not return upload_url; failing early to avoid upload errors';
            exit 1;
          fi

      - name: Upload metrics HTML to release (pushes only)
        if: github.event_name == 'push' && steps.create_release.outcome == 'success'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/metrics/index.html
          asset_name: metrics.html
          asset_content_type: text/html

      - name: Upload metrics CSV to release (pushes only)
        if: github.event_name == 'push' && steps.create_release.outcome == 'success'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/metrics/metrics.csv
          asset_name: metrics.csv
          asset_content_type: text/csv

      - name: Comment with artifact & release links (pushes only)
        if: github.event_name == 'push' && steps.create_release.outcome == 'success'
        uses: actions/github-script@v6
        env:
          RELEASE_TAG: metrics-${{ github.run_id }}-${{ github.sha }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const sha = context.sha;
            const releaseTag = process.env.RELEASE_TAG;
            const releaseUrl = `https://github.com/${owner}/${repo}/releases/tag/${releaseTag}`;
            const runUrl = `https://github.com/${owner}/${repo}/actions/runs/${context.runId}`;
            const lines = [
              `Automated metrics artifacts have been generated for commit \`${sha}\`.`,
              '',
              `Release: ${releaseUrl}`,
              `Workflow run: ${runUrl}`,
              '',
              "Artifacts (index.html, metrics.csv) are attached to the release and can also be downloaded from the workflow run's Artifacts section."
            ];
            const body = lines.join('\n');

            // Find PRs associated with this commit and comment there if present, otherwise comment on the commit
            const { data: prs } = await github.rest.repos.listPullRequestsAssociatedWithCommit({ owner, repo, commit_sha: sha });
            if (prs && prs.length > 0) {
              const prNumber = prs[0].number;
              await github.rest.issues.createComment({ owner, repo, issue_number: prNumber, body });
            } else {
              await github.rest.repos.createCommitComment({ owner, repo, commit_sha: sha, body });
            }

  publish-pages:
    needs: build-and-package
    runs-on: ubuntu-latest
    # Run automatically on pushes to main
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          set -euxo pipefail
          node --version
          npm --version
          npm ci --fetch-retries=5

      - name: Build
        run: npm run build --silent

      - name: Generate public site
        run: |
          mkdir -p public
          node dist/repo-metrics.js . --output-prefix public/metrics --max-commits 2000 --verbose

      - name: Publish to GitHub Pages
        uses: actions/configure-pages@v3

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
