name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Check for in-progress Pages deployment
        run: |
          set -euo pipefail
          echo "Installing jq for JSON parsing..."
          sudo apt-get update && sudo apt-get install -y jq
          echo "Checking for in-progress GitHub Pages deployments..."
          DEPLOYMENTS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/deployments?environment=github-pages")
          echo "$DEPLOYMENTS" | jq -r '.[] | select(.status=="in_progress") | .id' > /tmp/in_progress_ids || true
          if [ -s /tmp/in_progress_ids ]; then
            echo "Found in-progress Pages deployments (ids):"
            cat /tmp/in_progress_ids
            # Cancel each in-progress deployment by marking a status as inactive
            while read -r dep_id; do
              echo "Cancelling deployment $dep_id"
              curl -s -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/json" \
                -d '{"state":"inactive","description":"Cancelled by workflow to avoid collision"}' \
                "https://api.github.com/repos/${{ github.repository }}/deployments/'$dep_id'/statuses"
            done < /tmp/in_progress_ids
          else
            echo "No in-progress Pages deployments found."
          fi
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            echo "package-lock.json found — using npm ci"
            npm ci
          else
            echo "No package-lock.json — falling back to npm install"
            npm install
          fi
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Lint (fail on warnings)
        run: npm run lint -- --max-warnings 0
      - name: Run tests
        run: npm test --silent
      - name: Build
        run: npm run build
      - name: Upload dist artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
