name: Deploy to gh-pages (manual)

on:
  workflow_dispatch:
    inputs:
      use_pat:
        description: 'Set to true to use the GH_PAT secret for pushing (optional)'
        required: false
        default: 'false'
      message:
        description: 'Commit message to use for the gh-pages update'
        required: false
        default: 'chore(pages): update site'

jobs:
  deploy:
    name: Build and push to gh-pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci --silent

      - name: Build and prepare docs
        run: |
          npm run prepare-pages

      - name: Push docs to gh-pages branch
        env:
          REPO: ${{ github.repository }}
          WORKSPACE: ${{ github.workspace }}
          USE_PAT: ${{ github.event.inputs.use_pat }}
          COMMIT_MSG: "${{ github.event.inputs.message }}"
        run: |
          set -euo pipefail
          # Choose token
          if [ "$USE_PAT" = 'true' ]; then
            if [ -z "${GH_PAT:-}" ]; then
              echo "GH_PAT secret is required but not set. Aborting." >&2
              exit 1
            fi
            GIT_TOKEN="${GH_PAT}"
          else
            GIT_TOKEN="${GITHUB_TOKEN}"
          fi

          echo "Preparing temporary repo for gh-pages push..."
          TMPDIR=$(mktemp -d)
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Initialize a fresh repo and push docs into gh-pages
          cd "$TMPDIR"
          git init
          git remote add origin https://x-access-token:${GIT_TOKEN}@github.com/${REPO}.git

          # If gh-pages exists, fetch it; otherwise we'll create it
          if git ls-remote --exit-code --heads origin gh-pages >/dev/null 2>&1; then
            git fetch origin gh-pages
            git checkout -b gh-pages origin/gh-pages
          else
            git checkout --orphan gh-pages
          fi

          # Clean working tree
          git rm -rf . || true
          # Copy prepared docs into temp repo
          cp -R "$WORKSPACE/docs"/* . || true

          # Commit & push if there are changes
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to deploy to gh-pages"
          else
            git commit -m "$COMMIT_MSG - $GITHUB_SHA"
            git push --force origin HEAD:gh-pages
          fi
        # allow use of GH_PAT when provided
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
